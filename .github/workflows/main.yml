name: Docker Images CI

on:
  push:
    branches: [ coolify ]
  pull_request:
    branches: [ coolify ]

jobs:

  build-frontend:
    runs-on: ubuntu-latest
    defaults:
     run:
      working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4
      - name: Building Frontend...
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test --if-present

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
      - name: Deploying Frontend...
        run: | 
         curl --request GET '${{ secrets.FRONTEND_WEBHOOK }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'

  build-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: build
          build-root-directory: backend/

  test-backend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3
      - name: Test with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: test
          build-root-directory: backend/

  deploy-backend:
    runs-on: ubuntu-latest
    needs: test-backend

    steps:
      - name: Deploying Backend...
        run: | 
         curl --request GET '${{ secrets.BACKEND_WEBHOOK }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'
